#include <stdio.h>
#include <string.h>
int main() {
	char id[20];
	int len,ji,ou,i,temp;
	while(scanf("%s",id)==1){
		len = strlen(id);
		ji = ou =0;
		for(i=0;i<len;i++){
			if(i%2==0)
				ji += id[len-1-i]-48;
			else{
				temp = 2 * (id[len-1-i]-48);
				if(temp > 9)
					ou += temp - 9;
				else
					ou += temp;
			}
		}
		if((ji + ou)%10==0)
			puts("True");
		else
			puts("False");
	}
    return 0;
}


/*
银行卡号验证

当你输入信用卡号码的时候，有没有担心输错了而造成损失呢？其实可以不必这么担心，
因为并不是一个随便的信用卡号码都是合法的，它必须通过Luhn算法来验证通过。
该校验的过程：
1、从卡号最后一位数字开始，逆向将奇数位(1、3、5等等)相加。
2、从卡号最后一位数字开始，逆向将偶数位数字，先乘以2（如果乘积为两位数，则将其减去9），再求和。
3、将奇数位总和加上偶数位总和，结果应该可以被10整除。
例如，卡号是：5432123456788881
则奇数、偶数位（用红色标出）分布：5432123456788881
奇数位和=35
偶数位乘以2（有些要减去9）的结果：1 6 2 6 1 5 7 7，求和=35。
最后35+35=70 可以被10整除，认定校验通过。
请编写一个程序，从标准输入获得卡号，然后判断是否校验通过。
通过显示：True”，否则显示“False”。
*/
